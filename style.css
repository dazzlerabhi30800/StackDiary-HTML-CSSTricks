

* {
    margin : 0;
    padding : 0;
    box-sizing : border-box;

}



/* .typing {
    height : 80vh;
    display : flex;
    justify-content : center;
    align-items : center;
}

.typing-effect {
    width : 22ch;
    white-space : nowrap;
    overflow : hidden;
    border-right : 3px solid;
    font-family : monospace;
    font-size : 2em;
    animation : typing 3s steps(22),
                effect .5s step-end infinite alternate;
}

@keyframes typing{
    from {
        width : 0;
    }
}

@keyframes effect {
    50% {
        border-color : transparent;
    }
} */


/* Shadow Box Effect  */
/* .transparent-shadow {
    height : 100vh;
    display : flex;
    justify-content : center;
    align-items : center;
}

.margin-right {
    margin-right : 2em;
    color : black;
}

.margin-bottom {
    margin-bottom : 1em;
}

.align-center {
    text-align : center;
}

.box-shadow {
    box-shadow : 2px 4px 19px #3723a1;
}
.drop-shadow {
    filter : drop-shadow(2px 4px 8px #3723a1);
} */

/* Custom Cursor  */
/* .custom-cursor {
    display : flex;
    height  : 80vh;
    align-items : center;
    justify-content : center;
    background : #f3f3f3;
}

.card {
    width : 200px;
    height : 200px;
    display : flex;
    justify-content : center;
    align-items : center;
    background : #d29a5a;
    margin-right : 10px;
    color : #fff;
    text-align : center;
}

.card-image-cursor {
        background-color: #D11A5A;
        cursor: url("https://stackdiary.com/tools/assets/img/tools/html-beautifier.svg"), auto;    
}

.card-emoji-cursor {
    background-color: #D29B22;
    cursor: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg'  width='48' height='48' viewport='0 0 100 100' style='fill:black;font-size:24px;'><text y='50%'>ðŸš€</text></svg>"), auto;
  } */


  /* Simple tooltip using attr() */
  /* .tooltip {
      position : relative;
      border-bottom : 1px dotted black;
  }
  
  .tooltip:before {
      content : attr(tooltip-data);
      position : absolute;
      width : 250px;
      background : #efba93;
      color : #fff;
      text-align : center;
      padding : 15px;
      line-height : 1.1;
      border-radius : 5px;
      z-index : 1;
      opacity : 0;
      transition : opacity .5s;
      bottom : 125%;
      left : 50%;
      margin-left : -60px;
      font-size : .70em;
  }
  .tooltip:after {
      content : "";
      position : absolute;
      bottom : 75%;
      left : 50%;
      margin-left : -5px;
      border-width : 5px;
      border-style : solid;
      opacity : 0;
      transition : opacity .5s;
      border-color : #000 transparent transparent transparent;
     
  }

  .tooltip:hover:before,
  .tooltip:hover:after {
      opacity : 1;
      visibility : visible;
  } */

  /* Input Checkboxes in CSS */
  /* .checklist {
      padding : 50px;
      position : relative;
      background : #043b3e;
      border-top : 50px solid #03a2f4;
  }
  .checklist h2 {
      color : #f3f3f3;
      font-size : 25px;
      padding : 10px 0;
      margin-left : 10px;
      display : inline-block;
      border-bottom : 4px solid #f3f3f3;
  }
.checklist label {
    position : relative;
    display : block;
    margin : 40px 0;
    color : #fff;
    cursor : pointer;
}
.checklist input[type="checkbox"] {
    -webkit-appearance : none;
}
.checklist i {
    position : absolute;
    top : 2px;
    display : inline-block;
    width : 25px;
    height : 25px;
    border : 2px solid #fff;
}
.checklist input[type="checkbox"]:checked ~ i {
    top : 1px;
    height : 15px;
    width : 25px;
    border-top : none;
    border-right : none;
    transform :  rotate(-45deg);
}
.checklist span {
    position : relative;
    left : 40px;
    transition : .4s;
}
.checklist span:before {
    content : "";
    position : absolute;
    top : 50%;
    left : 0;
    width  : 100%;
    height : 1px;
    background : #fff;
    transform : translateY(-50%) scaleX(0);
    transform-origin : left;
    transition : transform .4s ease-in;
}
.checklist input[type="checkbox"]:checked ~ span:before {
    transform : translateY(-50%) scaleX(1);
    transform-origin : right;
    transition : transform .4s ease-in;
}
.checklist input[type="checkbox"]:checked ~ span {
    color : #18a2e7;
} */

/* Styling with :is() and :where()  */
/* :where(h2,h3) > b {
    color : red;
}

article :is(footer) > p {
    color : rebeccapurple;
}

.dark-button-style :where(button) {
    color : green;
    outline : none;
    border : none;
    padding : .4rem 1rem;
    background : black;
}
:is(.dark-button-style, .red-button-style) :where(button){
    color : cyan;
    outline : none;
    border : none;
    padding : auto;
    background : rgb(104, 102, 102);
}

:is(.content-title) :where(h2){
    text-transform : uppercase;
    letter-spacing : 5px;
}

.content-title :is(.title-area) :where(h3) {
    color : orange;
} */

/* Accordian button using keyframes  */

/* main {
    max-width : 400px;
    margin : 0 auto;
}
p {
    text-align : justify;
    font-family : monospace;
    font-size : 13px;
}
summary {
    font-size : 1rem;
    font-weight : 600;
    background : #f3f3f3;
    color : #000;
    padding : 1rem;
    margin-bottom : 1rem;
    outline : none;
    border-radius : .25rem;
    cursor : pointer;
    position : relative;
}
details[open] summary ~ * {
    animation : sweep 1s ease-in-out forwards;
    transition : all .4s ease-in;
}

@keyframes sweep {
    0% {
        opacity : 0;
        margin-top : -10px;
    }
    100% {
        opacity : 1;
        margin-top : 0px;
    }
}

details > summary::after {
    position : absolute;
    content : "+";
    right : 20px;
}
details[open] > summary::after {
    position : absolute;
    content : "-";
    right : 20px;
}
details > summary::marker {
    display : none;
    content : "";
} */

/* Hover side effect  */
/* .css-dynamic-sidebar {
    overflow : hidden;
    position : relative;
    height : 15em;
    max-width : 15em;
    margin : auto;
    background : rgba(0, 0, 255, 0.336);
}
.site-content {
    margin : auto;
}
nav {
    display : flex;
    flex-direction : column;
    position : absolute;
    right : 105%;
    padding : 1em;
    background : #e24e4e;
    transform : translateX(1em);
    transition : .2s transform;
    cursor : pointer;
}
nav:hover,
nav:focus-within {
    transform : translateX(100%);
}
a {
    white-space : pre;
    color : black;
    text-decoration : none;
}
p {
    font-size : 2em;
    font-family: monospace;
    text-align : center;
} */

/* letter dropcap using first-letter  */
/* .container {
    height : 80vh;
    display : flex;
    flex-direction : column;
    place-content : center;
    background : yellow;
    padding : 0 5rem;
    text-align : left;
}
h1 {
    font-size : 3rem;
    text-transform : uppercase;
}
p {
    font-size : 1.5rem;
}
.container p:first-of-type::first-letter {
    color : red;
    float : left;
    font-size : 3.1rem;
    line-height : 4vw;
    padding-right : 4px;
    padding-top : 8px;
} */

/* Add an icons before button using ::before  */
.card {
    height : 80vh;
    display : flex;
    justify-content : center;
    align-items : center;
}
.card-body {
    display :flex;
    flex-direction : column;
    height : 500px;
    width : 500px;
    display : flex;
    justify-content : center;
    align-items : center;
    background : rgb(136, 134, 134);
}
.card-body a {
    text-decoration : none;
    color : #fff;
    font-size : 2rem;
    text-align : left;
    position : relative;
}
.card-body a:nth-child(2n):after{
    position : absolute;
    content : "\0000a0";
    width : 20%;
    height : 50%;
    top : 30%;
    left : -30%;
    /* background : red; */
    background : url("https://stackdiary.com/docu.svg") no-repeat left center;
    background-size : 100% 100%;
}